if(colnames(post_hoc)[5] == "t.ratio"){
output <- data.frame(post_hoc$contrast)
output$report <- paste("t(", post_hoc$df,") = ", round(post_hoc$t.ratio,2), "; p ", sep = "")
output$p <- post_hoc$p.value
output$p <- ifelse(post_hoc$p.value < 0.001, "<0.001", paste("= ",round(post_hoc$p.value,3)))
output$report <- paste(output$report, output$p)
output$p <- NULL
return(output)
} else if(colnames(post_hoc[5]) == "z.ratio"){
output <- data.frame(post_hoc$contrast)
output$report <- paste("z = ", round(post_hoc$z.ratio,2), "; p", sep = "")
output$p <- post_hoc$p.value
output$p <- ifelse(post_hoc$p.value < 0.001, "<0.001", paste("= ", round(post_hoc$p.value,3), sep = ""))
output$report <- paste(output$report, output$p)
output$p <- NULL
return(output)
} else{
print("Unknown format, only results from z and t distributions are available")
}
}
# Function to convert numbers to words --> 1 -> one
number_to_word <- function(number){
if(number == 0){
return("zero")
} else if(number == 1){
return("one")
}else if(number == 2){
return("two")
} else if(number == 3){
return("three")
} else if(number == 4){
return("four")
} else if(number == 5){
return("five")
} else if(number == 6){
return("six")
} else if(number == 7){
return("seven")
} else if(number == 8){
return("eight")
} else if(number == 9){
return("nine")
} else if(number == 10){
return("ten")
} else if(number > 10 | number < 0){
return(number)
}
}
# Function to create a text output for a glm model
report_glm <- function(glm_model){
sum_glm <- summary(glm_model)
sum_glm <- sum_glm$coefficients
names_eff <- rownames(sum_glm)
output <- data.frame(names_eff)
output$report <- paste("Z = ", round(sum_glm[,3],2), "; p ", ifelse(round(sum_glm[,4],3) < 0.001, "<0.001", paste("= ", round(sum_glm[,4],3), sep = "")), sep = "")
output <- output[-1,]
return(output)
}
data_RF_outcome_single_tree <- function(data){
library(dplyr)
temp <- data%>%
filter(res.1st.EEG != "aucun" )%>%
filter(res.1st.EEG != "aucun mais propose" & res.1st.EEG != "aucun mais  propose")%>%
filter(les.epi != "aucun" & res.IRM != "aucun" & res.IRM != "aucun mais propose")%>%
filter(!is.na(dx.event),
dx.event != "Unknown")%>%
filter(type.epi.final == "lesionnelle" | type.epi.final == "non lesionnelle" | type.epi.final == "generalisee idiopathique" | is.na(type.epi.final))%>%
filter(veille.sommeil != "non documente")%>%
filter(status.neuro != "aucun" &  status.neuro != "aucun mais propose" & status.neuro != "non documente")%>%
mutate(std_eeg = ifelse(res.1st.EEG == "normal", "normal", EEG.result_resume),
std_eeg = case_when(pointes.1st.EEG == "focale" ~ "focale",
pointes.1st.EEG == "diffuse"~ "diffuse",
pointes.1st.EEG != "focale" & pointes.1st.EEG != "diffuse" ~ std_eeg))%>%
mutate(res.dx.final = dx.event)%>%
mutate(res.dx.final = ifelse(res.dx.final == "Epilepsy", "epilepsy", "non-epileptic"))%>%
mutate(age = case_when(age >= 16 & age <= 25 ~ "16_25",
age > 25 & age <= 35 ~ "26_35",
age > 35 & age <= 45 ~ "36_45",
age > 45 & age <= 55 ~ "46_55",
age > 55 & age <= 65 ~ "56_65",
age > 65 & age <= 75 ~ "66_75",
age > 75 & age <= 85 ~ "76_85",
age > 85 ~ "85_plus"))%>%
select(age, genre, atcd.famille, std_eeg, les.epi, status.neuro, veille.sommeil, res.dx.final)
temp <- temp%>%
dplyr::mutate(std_eeg = ifelse(std_eeg == "focale" | std_eeg == "diffuse", "Spikes", "No spikes"),
atcd.famille = ifelse(atcd.famille == "epilepsie", "Epilepsy", "other or none"),
les.epi = ifelse(les.epi == "lesion epileptogene", "Epileptogenic lesion", "No lesion or probably not epileptogenic"),
age = case_when(age == "16_25" | age == "26_35" | age == "36_45" | age == "46_55" ~ "<55",
age == "56_65" | age == "66_75" | age == "76_85" | age == "85_plus" ~ ">55"),
status.neuro = ifelse(status.neuro == "anormal", "Abnormal", "Normal or none"),
res.dx.final = case_when(res.dx.final == "epilepsy" ~ "Epileptic",
res.dx.final == "non-epileptic" ~ "Non epileptic"))
temp <- as.data.frame(temp)
for (i in 1:ncol(temp)){
temp[,i] <- factor(temp[,i])
}
data_RF <<- as.data.frame(temp)
# Division in training and test dataframes
train_index <- sample(nrow(temp), nrow(temp)*0.75)
data_RF_train <<- temp[train_index,]
data_RF_test <- temp[-train_index,]
data_RF_test <<- data_RF_test[,1:ncol(data_RF_test)-1]
labels_final <- temp[,ncol(temp)]
temp_labels_final <- data%>%
filter(res.1st.EEG != "aucun" )%>%
filter(res.1st.EEG != "aucun mais propose" & res.1st.EEG != "aucun mais  propose")%>%
filter(les.epi != "aucun" & res.IRM != "aucun" & res.IRM != "aucun mais propose")%>%
filter(!is.na(dx.event),
dx.event != "Unknown")%>%
filter(type.epi.final == "lesionnelle" | type.epi.final == "non lesionnelle" | type.epi.final == "generalisee idiopathique" | is.na(type.epi.final))%>%
filter(veille.sommeil != "non documente")%>%
filter(status.neuro != "aucun" &  status.neuro != "aucun mais propose" & status.neuro != "non documente")%>%
mutate(std_eeg = ifelse(res.1st.EEG == "normal", "normal", EEG.result_resume),
std_eeg = case_when(pointes.1st.EEG == "focale" ~ "focale",
pointes.1st.EEG == "diffuse"~ "diffuse",
pointes.1st.EEG != "focale" & pointes.1st.EEG != "diffuse" ~ std_eeg))%>%
mutate(res.dx.final = dx.event)%>%
mutate(res.dx.final = ifelse(res.dx.final == "Epilepsy", "epilepsy", "non-epileptic"))%>%
mutate(age = case_when(age >= 16 & age <= 25 ~ "16_25",
age > 25 & age <= 35 ~ "26_35",
age > 35 & age <= 45 ~ "36_45",
age > 45 & age <= 55 ~ "46_55",
age > 55 & age <= 65 ~ "56_65",
age > 65 & age <= 75 ~ "66_75",
age > 75 & age <= 85 ~ "76_85",
age > 85 ~ "85_plus"))%>%
select(age, genre,  atcd.famille, std_eeg, les.epi, status.neuro,  veille.sommeil, res.dx.final)
labels_final_train_RF <<- labels_final[train_index]
labels_final_test_RF <<- labels_final[-train_index]
labels_initial_train_RF <<- temp_labels_final[train_index,ncol(temp_labels_final)]
labels_initial_test_RF <<- temp_labels_final[-train_index,ncol(temp_labels_final)]
labels_initial_global <<- temp$res.dx.initial
}
# Function to prepare the data to be entered in the second and third Random Forest models
data_RF_outcome_single_tree_LT <- function(data){
library(dplyr)
temp <- data%>%
filter(res.1st.EEG != "aucun" )%>%
filter(res.1st.EEG != "aucun mais propose" & res.1st.EEG != "aucun mais  propose")%>%
filter(les.epi != "aucun" & res.IRM != "aucun" & res.IRM != "aucun mais propose")%>%
filter(!is.na(dx.event),
dx.event != "Unknown")%>%
filter(type.epi.final == "lesionnelle" | type.epi.final == "non lesionnelle" | type.epi.final == "generalisee idiopathique" | is.na(type.epi.final))%>%
filter(veille.sommeil != "non documente")%>%
filter(res.lt.EEG != "aucun")%>%
filter(res.lt.EEG != "aucun mais propose" & res.lt.EEG != "aucun mais  propose")%>%
filter(status.neuro != "aucun" &  status.neuro != "aucun mais propose" & status.neuro != "non documente")%>%
mutate(std_eeg = ifelse(res.1st.EEG == "normal", "normal", EEG.result_resume),
std_eeg = case_when(pointes.1st.EEG == "focale" ~ "focale",
pointes.1st.EEG == "diffuse"~ "diffuse",
pointes.1st.EEG != "focale" & pointes.1st.EEG != "diffuse" ~ std_eeg))%>%
mutate(lt_eeg = ifelse(res.lt.EEG == "normal", "normal", EEG.lt.result_resume),
lt_eeg = case_when(pointes.lt.EEG == "focale" ~ "focale",
pointes.lt.EEG == "diffuse"~ "diffuse",
pointes.lt.EEG != "focale" & pointes.lt.EEG != "diffuse" ~ lt_eeg))%>%
mutate(res.dx.final = dx.event)%>%
mutate(res.dx.final = ifelse(res.dx.final == "Epilepsy", "epilepsy", "non-epileptic"))%>%
mutate(age = case_when(age >= 16 & age <= 25 ~ "16_25",
age > 25 & age <= 35 ~ "26_35",
age > 35 & age <= 45 ~ "36_45",
age > 45 & age <= 55 ~ "46_55",
age > 55 & age <= 65 ~ "56_65",
age > 65 & age <= 75 ~ "66_75",
age > 75 & age <= 85 ~ "76_85",
age > 85 ~ "85_plus"))%>%
select(age, genre,  atcd.famille, std_eeg, lt_eeg, les.epi, status.neuro, veille.sommeil, res.dx.final)
temp <- temp%>%
dplyr::mutate(std_eeg = ifelse(std_eeg == "focale" | std_eeg == "diffuse", "Spikes", "No spikes"),
lt_eeg = ifelse(lt_eeg == "focale" | lt_eeg == "diffuse", "Spikes", "No spikes"),
atcd.famille = ifelse(atcd.famille == "epilepsie", "Epilepsy", "other or none"),
les.epi = ifelse(les.epi == "lesion epileptogene", "Epileptogenic lesion", "No lesion or probably not epileptogenic"),
age = case_when(age == "16_25" | age == "26_35" | age == "36_45" | age == "46_55" ~ "<55",
age == "56_65" | age == "66_75" | age == "76_85" | age == "85_plus" ~ ">55"),
status.neuro = ifelse(status.neuro == "anormal", "Abnormal", "Normal or none"),
res.dx.final = case_when(res.dx.final == "epilepsy" ~ "Epileptic",
res.dx.final == "non-epileptic" ~ "Non epileptic"))
temp <- as.data.frame(temp)
for (i in 1:ncol(temp)){
temp[,i] <- factor(temp[,i])
}
data_RF <<- as.data.frame(temp)
# Division in training and test dataframes
train_index <- sample(nrow(temp), nrow(temp)*0.75)
data_RF_train <<- temp[train_index,]
data_RF_test <- temp[-train_index,]
data_RF_test <<- data_RF_test[,1:ncol(data_RF_test)-1]
labels_final <- temp[,ncol(temp)]
temp_labels_final <- data%>%
filter(res.1st.EEG != "aucun" )%>%
filter(res.1st.EEG != "aucun mais propose" & res.1st.EEG != "aucun mais  propose")%>%
filter(les.epi != "aucun" & res.IRM != "aucun" & res.IRM != "aucun mais propose")%>%
filter(!is.na(dx.event),
dx.event != "Unknown")%>%
filter(type.epi.final == "lesionnelle" | type.epi.final == "non lesionnelle" | type.epi.final == "generalisee idiopathique" | is.na(type.epi.final))%>%
filter(veille.sommeil != "non documente")%>%
filter(res.lt.EEG != "aucun")%>%
filter(res.lt.EEG != "aucun mais propose" & res.lt.EEG != "aucun mais  propose")%>%
filter(status.neuro != "aucun" &  status.neuro != "aucun mais propose" & status.neuro != "non documente")%>%
mutate(std_eeg = ifelse(res.1st.EEG == "normal", "normal", EEG.result_resume),
std_eeg = case_when(pointes.1st.EEG == "focale" ~ "focale",
pointes.1st.EEG == "diffuse"~ "diffuse",
pointes.1st.EEG != "focale" & pointes.1st.EEG != "diffuse" ~ std_eeg))%>%
mutate(lt_eeg = ifelse(res.lt.EEG == "normal", "normal", EEG.lt.result_resume),
lt_eeg = case_when(pointes.lt.EEG == "focale" ~ "focale",
pointes.lt.EEG == "diffuse"~ "diffuse",
pointes.lt.EEG != "focale" & pointes.lt.EEG != "diffuse" ~ lt_eeg))%>%
mutate(res.dx.final = dx.event)%>%
mutate(res.dx.final = ifelse(res.dx.final == "Epilepsy", "epilepsy", "non-epileptic"))%>%
mutate(age = case_when(age >= 16 & age <= 25 ~ "16_25",
age > 25 & age <= 35 ~ "26_35",
age > 35 & age <= 45 ~ "36_45",
age > 45 & age <= 55 ~ "46_55",
age > 55 & age <= 65 ~ "56_65",
age > 65 & age <= 75 ~ "66_75",
age > 75 & age <= 85 ~ "76_85",
age > 85 ~ "85_plus"))%>%
select(age, genre,atcd.famille, std_eeg, lt_eeg, les.epi, status.neuro, veille.sommeil, res.dx.final)
temp_labels_final <- temp_labels_final%>%
dplyr::mutate(std_eeg = ifelse(std_eeg == "focale" | std_eeg == "diffuse", "Spikes", "No spikes"),
lt_eeg = ifelse(lt_eeg == "focale" | lt_eeg == "diffuse", "Spikes", "No spikes"),
atcd.famille = ifelse(atcd.famille == "epilepsie", "Epilepsy", "other or none"),
les.epi = ifelse(les.epi == "lesion epileptogene", "Epileptogenic lesion", "No lesion or probably not epileptogenic"),
age = case_when(age == "16_25" | age == "26_35" | age == "36_45" | age == "46_55" ~ "<55",
age == "56_65" | age == "66_75" | age == "76_85" | age == "85_plus" ~ ">55"),
status.neuro = ifelse(status.neuro == "anormal", "Abnormal", "Normal or none"),
res.dx.final = case_when(res.dx.final == "epilepsy" ~ "Epileptic",
res.dx.final == "non-epileptic" ~ "Non epileptic"))
labels_final_train_RF <<- labels_final[train_index]
labels_final_test_RF <<- labels_final[-train_index]
labels_initial_train_RF <<- temp_labels_final[train_index,ncol(temp_labels_final)]
labels_initial_test_RF <<- temp_labels_final[-train_index,ncol(temp_labels_final)]
labels_initial_global <<- temp$res.dx.initial
}
library(readxl)
data_full_cleaned <- read_xlsx("data_full_cleaned.xlsx")
data_full_cleaned$date.1st.EEG <- as_date(data_full_cleaned$date.1st.EEG)
data_full_cleaned$date.1st.cs.su <- as_date(data_full_cleaned$date.1st.cs.su)
data_full_cleaned$date.1st.1st.sz <- as_date(data_full_cleaned$date.1st.1st.sz)
data_full_cleaned$date.2nd.1st.sz <- as_date(data_full_cleaned$date.2nd.1st.sz)
data_full_cleaned$date.dern.1st.sz <- as_date(data_full_cleaned$date.dern.1st.sz)
data_full_cleaned$date.lt.EEG <- as_date(data_full_cleaned$date.lt.EEG)
data_full_cleaned$date.1st.1st.sz <- as_date(data_full_cleaned$date.1st.1st.sz)
data_full_cleaned$date.2nd.1st.sz <- as_date(data_full_cleaned$date.2nd.1st.sz)
data_full_cleaned$date.dern.1st.sz <- as_date(data_full_cleaned$date.dern.1st.sz)
data_full_cleaned$date.IRM <- as_date(data_full_cleaned$date.IRM)
# Not the first event
tot_pat <- nrow(data_full_cleaned%>%filter(!is.na(code.pat)))
N_not_first_event <- nrow(data_full_cleaned%>%filter(SBB.1 > 1))
pct_not_first_event <- pct.fun(nrow(data_full_cleaned%>%filter(SBB.1 > 1)), nrow(data_full_cleaned%>%filter(!is.na(code.pat))))
# N patients admited in the ED
N_pat_adm_ED <- nrow(data_full_cleaned%>%filter(!is.na(date.1st.cs.su)))
pct_pat_adm_ED <- pct.fun(nrow(data_full_cleaned%>%filter(!is.na(date.1st.cs.su))), nrow(data_full_cleaned%>%filter(!is.na(code.pat))))
# Delay EEG
N_EEG_24h <- nrow(data_full_cleaned%>%
mutate(delay_EEG = date.1st.EEG - date.1st.cs.su)%>%
select(delay_EEG)%>%
filter(delay_EEG < 2))
N_EEG <- nrow(data_full_cleaned%>%filter(!is.na(res.1st.EEG)))
pct_N_EEG_24h <- pct.fun(N_EEG_24h, N_EEG)
# N CT
N_CT <- nrow(data_full_cleaned%>%
filter(res.CT != "aucun" & res.CT != "aucun mais propose"))
pct_CT <- pct.fun(N_CT, tot_pat)
# Delays
delays <- data_full_cleaned%>%filter(res.IRM != "aucun" & res.IRM != "aucun mais propose")%>%
filter(res.lt.EEG != "aucun" & res.lt.EEG != "aucun mais propose")%>%
mutate(delay_mri = as.numeric(date.IRM - date.1st.cs.su),
delay_lt_eeg = as.numeric(date.lt.EEG - date.1st.cs.su))%>%
filter(delay_mri >= 0 | delay_lt_eeg >= 0)%>%
select(delay_mri, delay_lt_eeg, date.IRM, date.lt.EEG, date.1st.cs.su)%>%
summarise(median_delay_mri = median(delay_mri, na.rm = T),
median_delay_lt_eeg= median(delay_lt_eeg, na.rm = T))
# N female patients
N_fem <- nrow(data_full_cleaned[data_full_cleaned$genre == "F",])
# N female patients
N_fem <- nrow(data_full_cleaned[data_full_cleaned$genre == "F",])
# Mean age
M_SD_age <- data_full_cleaned%>%summarise(M_age = round(mean(age),1),
SD_age = round(sd(age),1))
#range age
range_age <- range(data_full_cleaned$age)
# N patients with epileptic seizure
N_epi_sz <- data_full_cleaned%>%
filter(dx.general == "Epileptic seizure")%>%
summarise(N_epi_sz = n(),
pct_epi_sz = pct.fun(N_epi_sz, tot_pat))
tot_epi_sz <- nrow(data_full_cleaned[data_full_cleaned$dx.general == "Epileptic seizure",])
N_acute <- data_full_cleaned%>%
filter(dx.event == "Acute symptomatic seizure")%>%
summarise(N_acute = n(),
pct_acute_tot = pct.fun(N_acute, tot_pat),
pct_acute_epi = pct.fun(N_acute, tot_epi_sz))
N_acute
# cause non-epileptic nature
non_epi <- data_full_cleaned%>%
filter(dx.general == "Non epileptic event")%>%
summarise(N_non_epi = n(),
pct_non_epi = pct.fun(N_non_epi, tot_pat))
non_epi
# cause non-epileptic nature
non_epi <- data_full_cleaned%>%
filter(dx.general == "Non epileptic event")%>%
summarise(N_non_epi = n(),
pct_non_epi = pct.fun(N_non_epi, tot_pat))
# N pat_per dx
tot_non_epi <- nrow(data_full_cleaned%>%filter(dx.event != "Epilepsy" | is.na(dx.event)))
N_dx_event <- data_full_cleaned%>%
group_by(dx.event)%>%
summarise(N = n(),
pct_tot = pct.fun(N,tot_pat),
pct_non_epi = pct.fun(N,tot_non_epi))
data_full_cleaned
N_epi_sz
tot_epi_sz
data_full_cleaned%>%
summarise(N = n(), age.pat = mean(age), sd = sd(age))
data_full_cleaned%>%
summarise(N = n(), age.pat = mean(age), sd = sd(age))
data_full_cleaned%>%
summarise(N = n(), age.pat = mean(age), sd = sd(age))
pct_not_first_event <- pct.fun(nrow(data_full_cleaned%>%filter(SBB.1 > 1)), nrow(data_full_cleaned%>%filter(!is.na(code.pat))))
N_not_first_event
data_lm_age <- data_full_cleaned%>%
mutate(more_1_event = ifelse(SBB.1 > 1, "many", "one"))%>%
mutate(dx_paste = ifelse(dx.event == "Epilepsy", paste(dx.event, type.epi.final),dx.event))%>%
select(code.pat, age, dx.event, dx.epi,  more_1_event, dx_paste, genre, les.epi)
data_lm_age
model_age <- lm(age ~  dx_paste + more_1_event + genre + les.epi, data = data_lm_age)
summary(model_age)
# Chi2 frequency event sleep between epilepsy and non-epilepsy patients
data_chi <- data_full_cleaned%>%select(dx.general, veille.sommeil)%>%
filter(veille.sommeil != "non documente")%>%
mutate(dx.general = ifelse(dx.general == "Epileptic seizure", "epileptic seizure", "not epileptic event"))%>%
group_by(dx.general, veille.sommeil)%>%
summarise(N = n())%>%
spread(key = veille.sommeil, N)
data_chi <- as.data.frame(data_chi)
row.names(data_chi) <- data_chi$dx_cat
data_chi <- data_chi[,2:3]
chi_sleep_wake <- chisq.test(data_chi)
chi_sleep_wake
data_chi
sz_sleep <- data_full_cleaned%>%
filter(veille.sommeil == "sommeil")%>%
filter(dx.general == "Epileptic seizure") %>%
summarise(N = n())
sz_sleep
sz_sleep_epi <- data_full_cleaned%>%
filter(veille.sommeil == "sommeil")%>%
filter(!is.na(code.pat))%>%
filter(dx.general == "Epileptic seizure") %>%
filter(dx.event == "Epilepsy")%>%
summarise(N = n())
sz_sleep_epi
# N per epilepsy types
N_epi_dx <- data_full_cleaned%>%
group_by(dx.epi, type.epi.final)%>%
summarise(N = n(),
mean_age = mean(age, na.rm = T),
sd_age = sd(age, na.rm = T))
tot_epi_disease <- nrow(data_full_cleaned%>%filter(dx.event == "Epilepsy"))
N_epi_dx
tot_epi_disease
N_pat_tumor <- data_full_cleaned%>%
filter(type.epi.final == "lesionnelle")%>%
filter(les.CT == "tumoral" | les.IRM == "tumoral")%>%
summarise(N = n())
N_pat_tumor
# post_hocs on the lm ANOVA investigating age differences among diagnoses
post_hoc_dx <- emmeans(model_age, list(pairwise ~ dx_paste), adjust = "tukey")
post_hoc_dx <- as.data.frame(post_hoc_dx$`pairwise differences of dx_paste`)
post_hoc <- report_emmeans(post_hoc_dx)
post_hoc
post_hoc_dx
N_pat_tumor
N_epi_dx
tabyl(data_full_cleaned, dx.final)
janitor::tabyl(data_full_cleaned, dx.final)
janitor::tabyl(data_full_cleaned, dx.final, dx.general)
janitor::tabyl(data_full_cleaned, dx.final, dx.event)
janitor::tabyl(data_full_cleaned, dx.final, dx.epi)
janitor::tabyl(data_full_cleaned, dx.dicho)
data_tree_exams <- data_full_cleaned%>%
filter(res.IRM != "aucun" & res.IRM != "aucun mais propose")%>%
filter(res.1st.EEG != "aucun" & res.1st.EEG != "aucun mais propose")%>%
#filter(res.lt.EEG != "aucun" & res.lt.EEG != "aucun mais propose")%>%
filter(les.epi != "douteux")%>%
mutate(dx.dicho = ifelse(dx.event != "Epilepsy" | is.na(dx.event), "non-epileptic", "epileptic"),
les.epi = ifelse(les.epi == "lesion epileptogene", "epileptogenic lesion", "no epileptogenic lesion"),
EEG.result_resume = ifelse(is.na(EEG.result_resume) | EEG.result_resume == "slow", "no spikes", "spikes"),
EEG.lt.result_resume = ifelse(is.na(EEG.lt.result_resume) | EEG.lt.result_resume == "slow", "no spikes", "spikes"))%>%
mutate(EEG_LT_y_n <- ifelse(res.lt.EEG == "aucun" | res.lt.EEG == "aucun mais propose", "no", "yes"),
to_remove = ifelse(EEG.result_resume == "no spikes" & EEG_LT_y_n == "no", "remove", "keep"))%>%
filter(to_remove == "keep")%>%
select(code.pat, dx.dicho, les.epi, EEG.result_resume, EEG.lt.result_resume, pointes.1st.EEG, pointes.lt.EEG, dx.event)
# Probability of being epileptic according to epileptogenic lesion
data_tree_exams%>%
group_by(les.epi,dx.dicho)%>%
summarise(N = n())%>%
filter(les.epi == "no epileptogenic lesion")
data_tree_exams%>%
group_by(les.epi,dx.dicho)%>%
summarise(N = n())%>%
filter(les.epi == "epileptogenic lesion")
# Model difference in the delay between epileptic and non-epileptic patients
data_glm_delay <- data_full_cleaned%>%
mutate(dx.dicho = ifelse(dx.event != "Epilepsy" | is.na(dx.event), "non_epi", "epi"))%>%
filter(!is.na(date.1st.cs.su),!is.na(date.dx.final))%>%
mutate(delay.1st_epi_dx_fin = as_date(date.dx.final) - as_date(date.1st.cs.su),
delay.1st_epi_dx_fin = as.numeric(delay.1st_epi_dx_fin))%>%
filter(delay.1st_epi_dx_fin >= 0)%>%
select(code.pat, delay.1st_epi_dx_fin, dx.dicho)
data_glm_delay
# Evolution of the diagnosis --> all patients
delay_dx_all <- data_full_cleaned%>%
filter(!is.na(date.1st.cs.su),!is.na(date.dx.final))%>%
mutate(delay.1st_epi_dx_fin = as_date(date.dx.final) - as_date(date.1st.cs.su))%>%
filter(delay.1st_epi_dx_fin >= 0)%>%
summarise(MEAN = round(mean(delay.1st_epi_dx_fin, na.rm = T),2),
SD = round(sd(delay.1st_epi_dx_fin, na.rm = T),2))
delay_dx_all
# Evolution of the diagnosis --> epi patients
delay_dx_epi <- data_full_cleaned%>%
filter(dx.event == "Epilepsy")%>%
filter(!is.na(date.1st.cs.su),!is.na(date.dx.final))%>%
mutate(delay.1st_epi_dx_fin = as_date(date.dx.final) - as_date(date.1st.cs.su))%>%
filter(delay.1st_epi_dx_fin >= 0)%>%
summarise(MEAN = round(mean(delay.1st_epi_dx_fin, na.rm = T),2),
SD = round(sd(delay.1st_epi_dx_fin, na.rm = T),2))
delay_dx_epi
# Evolution of the diagnosis --> non epi patients
delay_dx_non_epi <- data_full_cleaned%>%
filter(dx.event != "Epilepsy" | is.na(dx.event))%>%
filter(!is.na(date.1st.cs.su),!is.na(date.dx.final))%>%
mutate(delay.1st_epi_dx_fin = as_date(date.dx.final) - as_date(date.1st.cs.su))%>%
filter(delay.1st_epi_dx_fin >= 0)%>%
mutate(dx_first_consult = ifelse(delay.1st_epi_dx_fin == 0, "first_cs", "later"))%>%
summarise(MEAN = round(mean(delay.1st_epi_dx_fin, na.rm = T),2),
SD = round(sd(delay.1st_epi_dx_fin, na.rm = T),2))
# Model difference in the delay between epileptic and non-epileptic patients
data_glm_delay <- data_full_cleaned%>%
mutate(dx.dicho = ifelse(dx.event != "Epilepsy" | is.na(dx.event), "non_epi", "epi"))%>%
filter(!is.na(date.1st.cs.su),!is.na(date.dx.final))%>%
mutate(delay.1st_epi_dx_fin = as_date(date.dx.final) - as_date(date.1st.cs.su),
delay.1st_epi_dx_fin = as.numeric(delay.1st_epi_dx_fin))%>%
filter(delay.1st_epi_dx_fin >= 0)%>%
select(code.pat, delay.1st_epi_dx_fin, dx.dicho)
ggplot(data_glm_delay, aes(x = delay.1st_epi_dx_fin))+geom_histogram() # Count data with typical Poisson distribution --> fig not included in the paper
mdelay_dx <- glm(delay.1st_epi_dx_fin ~ dx.dicho, data = data_glm_delay, family = "poisson")
output_res_delay <- report_glm(mdelay_dx)
output_res_delay
summary(mdelay_dx)
# Does the delay until the final diagnosis impacts the relapse rate ?
data_glm_RR <- data_full_cleaned%>%
mutate(dx.dicho = ifelse(dx.event != "Epilepsy" | is.na(dx.event), "non_epi", "epi"))%>%
filter(!is.na(date.1st.cs.su),!is.na(date.dx.final))%>%
mutate(delay.1st_epi_dx_fin = as_date(date.dx.final) - as_date(date.1st.cs.su),
delay.1st_epi_dx_fin = as.numeric(delay.1st_epi_dx_fin))%>%
filter(delay.1st_epi_dx_fin >= 0)%>%
mutate(dx_first_consult = ifelse(delay.1st_epi_dx_fin == 0, "first_cs", "later"))%>%
select(code.pat, delay.1st_epi_dx_fin, dx.dicho, n.tot.recidives, dx_first_consult)
mdelay_RR <- glm(n.tot.recidives ~ delay.1st_epi_dx_fin*dx.dicho, data = data_glm_RR, family = "poisson")
output_res_RR <- report_glm(mdelay_RR)
output_res_RR
mdelay_RR
set.seed(2020)
# Preparation of the data
data_RF_outcome_single_tree(data_full_cleaned)
data_RF_outcome_single_tree
17.5-9
labels_final_test_RF
labels_initial_train_RF
ncol(temp_labels_final)
?ncol
data_RF_outcome_single_tree
# Preparation of the data
data_RF_outcome_single_tree(data_full_cleaned)
data_RF_train
str(data_RF_train)
gini
conf_mat
i
i=1
classes[i]
prediction_for_roc_curve
save_auc
res_auc
table(data_MD$dx_ini_paste, data_MD$dx_fin_paste)
conf_mat_MD
# Predictive ability of an MD in the ER
data_MD <- data_full_cleaned%>%
mutate(type.epi.initial = case_when(type.epi.initial == "cryptogenique" ~ "non lesionnelle",
type.epi.initial == "focale symptomatique" ~ "lesionnelle",
TRUE ~ type.epi.initial))%>%
mutate(dx_ini_paste = paste(dx.initial, type.epi.initial),
dx_fin_paste = paste(dx.final, type.epi.final))%>%
filter(res.1st.EEG != "aucun" & res.1st.EEG != "aucun mais propose")%>%
filter(les.epi != "aucun")%>%
filter(status.neuro != "aucun" &  status.neuro != "aucun mais propose" & status.neuro != "non documente")%>%
filter(veille.sommeil != "non documente")%>%
select(dx_ini_paste, dx_fin_paste)
# confusion matrix and accuracy
conf_mat_MD <- table(data_MD$dx_ini_paste, data_MD$dx_fin_paste)
acc_MD <- round(mean(data_MD$dx_ini_paste == data_MD$dx_fin_paste),4)*100
N_first_RF_model <- nrow(data_RF)
N_first_RF_model
conf_mat_MD
conf_mat_MD[1,1],
conf_mat_MD[1,1]
gini
install.packages(c("car", "randomForest", "ROCR", "writexl"))
